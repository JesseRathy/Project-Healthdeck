// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <CardDetail
    card="google.ca"
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": Array [
        <CardSectionStyle>
          <Component
            style={
              Object {
                "alignItems": "center",
                "justifyContent": "center",
                "marginLeft": 10,
                "marginRight": 10,
              }
            }
          >
            <Component
              source={
                Object {
                  "uri": undefined,
                }
              }
              style={
                Object {
                  "height": 50,
                  "width": 50,
                }
              }
            />
          </Component>
          <Component
            style={
              Object {
                "flexDirection": "column",
                "justifyContent": "space-around",
              }
            }
          >
            <Component
              style={
                Object {
                  "fontSize": 18,
                }
              }
            />
            <Component />
          </Component>
        </CardSectionStyle>,
        <CardSectionStyle>
          <Component
            source={
              Object {
                "uri": undefined,
              }
            }
            style={
              Object {
                "flex": 1,
                "height": 300,
                "width": null,
              }
            }
          />
        </CardSectionStyle>,
        <CardSectionStyle>
          <Button
            onPress={[Function]}
          >
            Takes you to
          </Button>
        </CardSectionStyle>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": Array [
            <Component
              style={
                Object {
                  "alignItems": "center",
                  "justifyContent": "center",
                  "marginLeft": 10,
                  "marginRight": 10,
                }
              }
            >
              <Component
                source={
                  Object {
                    "uri": undefined,
                  }
                }
                style={
                  Object {
                    "height": 50,
                    "width": 50,
                  }
                }
              />
            </Component>,
            <Component
              style={
                Object {
                  "flexDirection": "column",
                  "justifyContent": "space-around",
                }
              }
            >
              <Component
                style={
                  Object {
                    "fontSize": 18,
                  }
                }
              />
              <Component />
            </Component>,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <Component
                source={
                  Object {
                    "uri": undefined,
                  }
                }
                style={
                  Object {
                    "height": 50,
                    "width": 50,
                  }
                }
              />,
              "style": Object {
                "alignItems": "center",
                "justifyContent": "center",
                "marginLeft": 10,
                "marginRight": 10,
              },
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "source": Object {
                  "uri": undefined,
                },
                "style": Object {
                  "height": 50,
                  "width": 50,
                },
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": Array [
                <Component
                  style={
                    Object {
                      "fontSize": 18,
                    }
                  }
                />,
                <Component />,
              ],
              "style": Object {
                "flexDirection": "column",
                "justifyContent": "space-around",
              },
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": undefined,
                  "style": Object {
                    "fontSize": 18,
                  },
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": undefined,
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
            ],
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": <Component
            source={
              Object {
                "uri": undefined,
              }
            }
            style={
              Object {
                "flex": 1,
                "height": 300,
                "width": null,
              }
            }
          />,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "source": Object {
              "uri": undefined,
            },
            "style": Object {
              "flex": 1,
              "height": 300,
              "width": null,
            },
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": <Button
            onPress={[Function]}
          >
            Takes you to
          </Button>,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": "Takes you to",
            "onPress": [Function],
          },
          "ref": null,
          "rendered": "Takes you to",
          "type": [Function],
        },
        "type": [Function],
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": Array [
          <CardSectionStyle>
            <Component
              style={
                Object {
                  "alignItems": "center",
                  "justifyContent": "center",
                  "marginLeft": 10,
                  "marginRight": 10,
                }
              }
            >
              <Component
                source={
                  Object {
                    "uri": undefined,
                  }
                }
                style={
                  Object {
                    "height": 50,
                    "width": 50,
                  }
                }
              />
            </Component>
            <Component
              style={
                Object {
                  "flexDirection": "column",
                  "justifyContent": "space-around",
                }
              }
            >
              <Component
                style={
                  Object {
                    "fontSize": 18,
                  }
                }
              />
              <Component />
            </Component>
          </CardSectionStyle>,
          <CardSectionStyle>
            <Component
              source={
                Object {
                  "uri": undefined,
                }
              }
              style={
                Object {
                  "flex": 1,
                  "height": 300,
                  "width": null,
                }
              }
            />
          </CardSectionStyle>,
          <CardSectionStyle>
            <Button
              onPress={[Function]}
            >
              Takes you to
            </Button>
          </CardSectionStyle>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": Array [
              <Component
                style={
                  Object {
                    "alignItems": "center",
                    "justifyContent": "center",
                    "marginLeft": 10,
                    "marginRight": 10,
                  }
                }
              >
                <Component
                  source={
                    Object {
                      "uri": undefined,
                    }
                  }
                  style={
                    Object {
                      "height": 50,
                      "width": 50,
                    }
                  }
                />
              </Component>,
              <Component
                style={
                  Object {
                    "flexDirection": "column",
                    "justifyContent": "space-around",
                  }
                }
              >
                <Component
                  style={
                    Object {
                      "fontSize": 18,
                    }
                  }
                />
                <Component />
              </Component>,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <Component
                  source={
                    Object {
                      "uri": undefined,
                    }
                  }
                  style={
                    Object {
                      "height": 50,
                      "width": 50,
                    }
                  }
                />,
                "style": Object {
                  "alignItems": "center",
                  "justifyContent": "center",
                  "marginLeft": 10,
                  "marginRight": 10,
                },
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "source": Object {
                    "uri": undefined,
                  },
                  "style": Object {
                    "height": 50,
                    "width": 50,
                  },
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": Array [
                  <Component
                    style={
                      Object {
                        "fontSize": 18,
                      }
                    }
                  />,
                  <Component />,
                ],
                "style": Object {
                  "flexDirection": "column",
                  "justifyContent": "space-around",
                },
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": undefined,
                    "style": Object {
                      "fontSize": 18,
                    },
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": undefined,
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
              ],
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": <Component
              source={
                Object {
                  "uri": undefined,
                }
              }
              style={
                Object {
                  "flex": 1,
                  "height": 300,
                  "width": null,
                }
              }
            />,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "source": Object {
                "uri": undefined,
              },
              "style": Object {
                "flex": 1,
                "height": 300,
                "width": null,
              },
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": <Button
              onPress={[Function]}
            >
              Takes you to
            </Button>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": "Takes you to",
              "onPress": [Function],
            },
            "ref": null,
            "rendered": "Takes you to",
            "type": [Function],
          },
          "type": [Function],
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
